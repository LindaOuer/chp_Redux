{"version":3,"sources":["images/slate_card.png","constants/actions-types.js","reducers/index.js","store/index.js","components/Card.jsx","components/Form.jsx","actions/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD_CARDNB","ADD_CARDHOLDER","ADD_VALIDTHRU","initialState","cardNb","cardHolder","validThru","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","value","store","createStore","pDiv","position","bottom","left","width","container","backgroundImage","concat","credit","backgroundSize","backgroundRepeat","height","borderRadius","color","Card","connect","_ref","react_default","a","createElement","className","style","marginBottom","textAlign","textTransform","cardExpiry","val","month","limit","substring","date","max","Number","ConnectedForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleKeyUp","event","_event$target","target","maxLength","message","slice","setState","defineProperty","id","keyCode","preventDefault","addCardNb","addCardHolder","addValidThru","_this$state","onKeyUp","htmlFor","number_format_default","format","placeholder","onChange","Component","Form","dispatch","App","components_Card","components_Form","Boolean","window","location","hostname","match","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48d254c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slate_card.5f7f1307.png\";","export const ADD_CARDNB = \"ADD_CARDNB\";\r\nexport const ADD_CARDHOLDER = \"ADD_CARDHOLDER\";\r\nexport const ADD_VALIDTHRU = \"ADD_VALIDTHRU\";\r\n","import {\r\n  ADD_CARDNB,\r\n  ADD_CARDHOLDER,\r\n  ADD_VALIDTHRU\r\n} from \"../constants/actions-types\";\r\n\r\nconst initialState = {\r\n  cardNb: \"0000 0000 0000 0000\",\r\n  cardHolder: \"XXXXXXXXXX\",\r\n  validThru: \"XX/YY\"\r\n};\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_CARDNB) {\r\n    return {\r\n      ...state,\r\n      cardNb: action.value\r\n    };\r\n  }\r\n  if (action.type === ADD_CARDHOLDER) {\r\n    return {\r\n      ...state,\r\n      cardHolder: action.value\r\n    };\r\n  }\r\n  if (action.type === ADD_VALIDTHRU) {\r\n    return {\r\n      ...state,\r\n      validThru: action.value\r\n    };\r\n  }\r\n  return state;\r\n}\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nconst store = createStore(rootReducer);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { credit } from \"../images\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cardNb: state.cardNb,\r\n    cardHolder: state.cardHolder,\r\n    validThru: state.validThru\r\n  };\r\n};\r\n\r\nconst pDiv = {\r\n  position: \"absolute\",\r\n  bottom: \"8px\",\r\n  left: \"16px\",\r\n  width: \"60%\"\r\n};\r\nconst container = {\r\n  backgroundImage: `url(${credit})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  width: \"85%\",\r\n  height: \"100%\",\r\n  borderRadius: \"20px\",\r\n\r\n  position: \"relative\",\r\n  color: \"white\"\r\n};\r\n\r\nconst CardDetails = ({ cardNb, cardHolder, validThru }) => (\r\n  <div className=\"list-group list-group-flush\" style={container}>\r\n    <div style={pDiv}>\r\n      <p style={{ marginBottom: \"0px\" }}> {cardNb} </p>\r\n\r\n      <p style={{ marginBottom: \"0px\", textAlign: \"right\" }}> {validThru} </p>\r\n      <p style={{ marginBottom: \"0px\", textTransform: \"uppercase\" }}>\r\n        {cardHolder}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\nconst Card = connect(mapStateToProps)(CardDetails);\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCardNb, addCardHolder, addValidThru } from \"../actions\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addCardNb: cardNb => dispatch(addCardNb(cardNb)),\r\n    addCardHolder: cardHolder => dispatch(addCardHolder(cardHolder)),\r\n    addValidThru: validThru => dispatch(addValidThru(validThru))\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cardNb: state.cardNb,\r\n    cardHolder: state.cardHolder,\r\n    validThru: state.validThru\r\n  };\r\n};\r\n\r\nfunction cardExpiry(val) {\r\n  let month = limit(val.substring(0, 2), \"12\");\r\n  let date = limit(val.substring(2, 4), \"31\");\r\n\r\n  return month + (date.length ? \"/\" + date : \"\");\r\n}\r\n\r\nfunction limit(val, max) {\r\n  if (val.length === 1 && val[0] > max[0]) {\r\n    val = \"0\" + val;\r\n  }\r\n\r\n  if (val.length === 2) {\r\n    if (Number(val) === 0) {\r\n      val = \"01\";\r\n\r\n      //this can happen when user paste number\r\n    } else if (val > max) {\r\n      val = max;\r\n    }\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      cardNb: props.cardNb,\r\n      cardHolder: props.cardHolder,\r\n      validThru: props.validThru\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    let { value, maxLength } = event.target;\r\n    let message = value.slice(0, maxLength);\r\n    this.setState({ [event.target.id]: message });\r\n  }\r\n\r\n  handleKeyUp(event) {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n\r\n      this.props.addCardNb(this.state.cardNb);\r\n      this.props.addCardHolder(this.state.cardHolder);\r\n      this.props.addValidThru(this.state.validThru);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { cardNb, cardHolder, validThru } = this.state;\r\n\r\n    return (\r\n      <form onKeyUp={this.handleKeyUp}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cardNb\">cardNb</label>\r\n          {/* <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"cardNb\"\r\n            value={cardNb}\r\n            maxLength=\"16\"\r\n            onChange={this.handleChange}\r\n          /> */}\r\n          <NumberFormat\r\n            format=\"#### #### #### ####\"\r\n            className=\"form-control\"\r\n            id=\"cardNb\"\r\n            value={cardNb}\r\n            maxLength=\"19\"\r\n            placeholder={cardNb}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"cardHolder\">cardHolder</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"cardHolder\"\r\n            value={cardHolder}\r\n            maxLength=\"20\"\r\n            placeholder={cardHolder}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"validThru\">validThru</label>\r\n          {/* <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"validThru\"\r\n            value={validThru}\r\n            maxLength=\"5\"\r\n            placeholder=\"XX/YY\"\r\n            onChange={this.handleChange}\r\n          /> */}\r\n          <NumberFormat\r\n            format={cardExpiry}\r\n            className=\"form-control\"\r\n            id=\"validThru\"\r\n            value={validThru}\r\n            placeholder={validThru}\r\n            maxLength=\"5\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst Form = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConnectedForm);\r\nexport default Form;\r\n","import {\r\n  ADD_CARDNB,\r\n  ADD_CARDHOLDER,\r\n  ADD_VALIDTHRU\r\n} from \"../constants/actions-types\";\r\n\r\nexport function addCardNb(value) {\r\n  return { type: ADD_CARDNB, value };\r\n}\r\n\r\nexport function addCardHolder(value) {\r\n  return { type: ADD_CARDHOLDER, value };\r\n}\r\n\r\nexport function addValidThru(value) {\r\n  return { type: ADD_VALIDTHRU, value };\r\n}\r\n","import React from \"react\";\nimport Card from \"./components/Card.jsx\";\nimport Form from \"./components/Form.jsx\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"row mt-5\">\n    <div className=\"col-md-4 offset-md-1\">\n      <h2>Infos</h2>\n      <Card />\n    </div>\n    <div className=\"col-md-4 offset-md-1\">\n      <Form />\n    </div>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}